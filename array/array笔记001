数组的方法：
1.检测数组
	instanceof() 
	Array.isArray() 是否为数组

2.转换方法
	toString() 返回数组的字符串表示，每个值表示成字符串，用逗号隔开
	valueOf()  返回的还是数组
	toLocaleString() 返回转换为本地字符串表示，和toString() 方法几乎无区别
	join() 可以使用不同的分隔符来构建字符串 . 
		 var colors = ["red","green","blue"];
		 colors.join("/");
		 //  red/green/blue

3.栈方法
	LIFO （后进先出）
	push() : 数组末尾添加任意项，并返回新数组长度
	pop() :  从数组末尾移除一项，并返回被移除这项
	
4.队列方法
	FIFO （先进先出）
	push() :  同上
	shift() : 从数组前端移除第一项 ，并返回被移除这项
	
	unshift() : 从数组前端添加入项，返回新数组长度
	
5.重排序方法：
	reverse() : 反转数组的排序
	sort() : 按升序排列数组项。即小值排前 。 注意： sort()方法会调用每个数组项的toString()方法，然后比较得到字符串，然后排序。
	比较函数：
		function compare(a,b){
			if(a < b){
				return -1;
			}else if(a > b){
				return 1;
			}else{
				return 0;
			}
		};
		var values = [0,3,12,4,22,5,3,15];
		values.sort(compare);
		alert(values);
		// 0,3,3,4,5,12,15,22

6.操作方法：
	concat() : 基于当前数组中的所有项创建一个新数组，并将接收到的参数添加到数组后面
	slice() : 基于当前数组中的一项或多项创建新数组。可以有一个或两个参数。
		colors.slice(1) : 从colors数组中第二项到最后项
		colors.slice(1,4) : 从colors数组中复制从位置1到位置3结束
	splice() :  删除。2个参数。 splice(0,2)  参数0表示从0号位开始，参数2表示要删除的项数。
				插入。 3个参数。 参数分别表示：起始位置，要删除的项，要插入的项
				 	splice(2,1,"red","blue") ： 从2号位开始，删除一项，新加2项
				替换。指定3个参数： 起始位置、要删除的项数、要插入的任意数量的项。
				splice() 方法始终返回一个数组，该数组包含从原始数组中删除的项，如果没有删除，则返回空数组
7.位置方法：
	indexOf() : 接受2个参数。要查找的项 ，表示查找起点位置的索引
	lastIndexOf() : 同上。只是从末尾找起
8.迭代方法： 
		下面这些函数都接受3个参数：数组项的值、该项在数组中的位置、数组对象本身
	every() :
	filter() : 
	forEach() : 
	map() :
	some() :
		var numbers = [1,2,3,4,5,4,3,2,1];
		var filterResult = numbers.filter(function(item,index,array){
			return (item > 2)
		});
		alert(filterResult); 
		// 3,4,5,4,3
————————————end————————————
